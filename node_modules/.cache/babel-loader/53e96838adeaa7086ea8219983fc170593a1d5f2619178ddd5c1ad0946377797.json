{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, vModelText as _vModelText, withKeys as _withKeys, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"d-flex align-items-center\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"user-input-group d-flex align-items-center\"\n};\nconst _hoisted_3 = {\n  class: \"text-light d-flex align-items-center\"\n};\nconst _hoisted_4 = {\n  class: \"username me-3\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 사용자가 설정되지 않았을 때 \"), !$setup.isLoggedIn ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.usernameInput = $event),\n    type: \"text\",\n    class: \"form-control form-control-sm custom-input\",\n    placeholder: \"사용자 이름 입력\",\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $setup.handleSetUsername && $setup.handleSetUsername(...args), [\"enter\"]))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $setup.usernameInput]]), _createElementVNode(\"button\", {\n    class: \"btn btn-sm btn-light custom-btn ms-2\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.handleSetUsername && $setup.handleSetUsername(...args))\n  }, \" 확인 \")])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" 사용자가 설정되었을 때 \"), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"span\", _hoisted_4, _toDisplayString($setup.username), 1 /* TEXT */), _createElementVNode(\"button\", {\n    class: \"btn btn-sm btn-outline-light custom-btn\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $setup.handleClearUsername && $setup.handleClearUsername(...args))\n  }, \" 로그아웃 \")])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createCommentVNode","$setup","isLoggedIn","_hoisted_2","_createElementVNode","_cache","$event","usernameInput","type","placeholder","onKeyup","_withKeys","args","handleSetUsername","onClick","_Fragment","_hoisted_3","_hoisted_4","_toDisplayString","username","handleClearUsername"],"sources":["/Users/user/Developer/boardpj/boardpjcli/src/components/UserHeader.vue"],"sourcesContent":["<template>\n  <div class=\"d-flex align-items-center\">\n    <!-- 사용자가 설정되지 않았을 때 -->\n    <div v-if=\"!isLoggedIn\" class=\"user-input-group d-flex align-items-center\">\n      <input\n          v-model=\"usernameInput\"\n          type=\"text\"\n          class=\"form-control form-control-sm custom-input\"\n          placeholder=\"사용자 이름 입력\"\n          @keyup.enter=\"handleSetUsername\"\n      >\n      <button class=\"btn btn-sm btn-light custom-btn ms-2\" @click=\"handleSetUsername\">\n        확인\n      </button>\n    </div>\n\n    <!-- 사용자가 설정되었을 때 -->\n    <div v-else class=\"text-light d-flex align-items-center\">\n      <span class=\"username me-3\">{{ username }}</span>\n      <button class=\"btn btn-sm btn-outline-light custom-btn\" @click=\"handleClearUsername\">\n        로그아웃\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed } from 'vue'\nimport { useStore } from 'vuex'\n\nexport default {\n  name: 'UserHeader',\n  setup() {\n    const store = useStore()\n    const usernameInput = ref('')\n\n    const username = computed(() => store.getters.getUsername)\n    const isLoggedIn = computed(() => store.getters.isLoggedIn)\n\n    const handleSetUsername = () => {\n      if (usernameInput.value.trim()) {\n        store.dispatch('setUsername', usernameInput.value.trim())\n        usernameInput.value = ''\n      }\n    }\n\n    const handleClearUsername = () => {\n      store.dispatch('clearUsername')\n    }\n\n    return {\n      usernameInput,\n      username,\n      isLoggedIn,\n      handleSetUsername,\n      handleClearUsername\n    }\n  }\n}\n</script>\n\n<style scoped>\n.user-input-group {\n  min-width: 250px;  /* 입력 그룹 최소 너비 설정 */\n}\n\n.custom-input {\n  min-width: 180px;  /* 입력창 최소 너비 */\n  height: 35px;      /* 입력창 높이 */\n  border-radius: 4px;\n}\n\n.custom-btn {\n  height: 35px;          /* 버튼 높이 */\n  min-width: 60px;       /* 버튼 최소 너비 */\n  padding: 0 15px;       /* 버튼 좌우 패딩 */\n  white-space: nowrap;   /* 버튼 텍스트 줄바꿈 방지 */\n  word-break: keep-all;  /* 한글 단어 분리 방지 */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.username {\n  font-size: 0.95rem;\n  font-weight: 500;\n}\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAA2B;;EADxCC,GAAA;EAG4BD,KAAK,EAAC;;;EAclBA,KAAK,EAAC;AAAsC;;EAChDA,KAAK,EAAC;AAAe;;uBAjB/BE,mBAAA,CAsBM,OAtBNC,UAsBM,GArBJC,mBAAA,qBAAwB,E,CACZC,MAAA,CAAAC,UAAU,I,cAAtBJ,mBAAA,CAWM,OAXNK,UAWM,G,gBAVJC,mBAAA,CAMC;IAVP,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAKmBL,MAAA,CAAAM,aAAa,GAAAD,MAAA;IACtBE,IAAI,EAAC,MAAM;IACXZ,KAAK,EAAC,2CAA2C;IACjDa,WAAW,EAAC,WAAW;IACtBC,OAAK,EAAAL,MAAA,QAAAA,MAAA,MAThBM,SAAA,KAAAC,IAAA,KASwBX,MAAA,CAAAY,iBAAA,IAAAZ,MAAA,CAAAY,iBAAA,IAAAD,IAAA,CAAiB;iEAJtBX,MAAA,CAAAM,aAAa,E,GAM1BH,mBAAA,CAES;IAFDR,KAAK,EAAC,sCAAsC;IAAEkB,OAAK,EAAAT,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEX,MAAA,CAAAY,iBAAA,IAAAZ,MAAA,CAAAY,iBAAA,IAAAD,IAAA,CAAiB;KAAE,MAEhF,E,oBAIFd,mBAAA,CAKMiB,SAAA;IAtBVlB,GAAA;EAAA,IAgBIG,mBAAA,kBAAqB,EACrBI,mBAAA,CAKM,OALNY,UAKM,GAJJZ,mBAAA,CAAiD,QAAjDa,UAAiD,EAAAC,gBAAA,CAAlBjB,MAAA,CAAAkB,QAAQ,kBACvCf,mBAAA,CAES;IAFDR,KAAK,EAAC,yCAAyC;IAAEkB,OAAK,EAAAT,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEX,MAAA,CAAAmB,mBAAA,IAAAnB,MAAA,CAAAmB,mBAAA,IAAAR,IAAA,CAAmB;KAAE,QAErF,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}