{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { postAPI } from '@/api';\nexport default {\n  setup() {\n    const posts = ref([]);\n    const pageInfo = ref(null);\n    const fetchPosts = async (page = 1) => {\n      try {\n        const response = await postAPI.getList(page);\n        posts.value = response.data.content;\n        pageInfo.value = {\n          currentPage: response.data.currentPage,\n          totalPages: response.data.totalPages,\n          hasNext: response.data.hasNext,\n          hasPrevious: response.data.hasPrevious\n        };\n      } catch (error) {\n        console.error('게시글 목록 조회 실패:', error);\n      }\n    };\n    const handlePageChange = page => {\n      fetchPosts(page);\n    };\n    const formatDate = dateString => {\n      return new Date(dateString).toLocaleDateString();\n    };\n    onMounted(() => {\n      fetchPosts();\n    });\n    return {\n      posts,\n      pageInfo,\n      handlePageChange,\n      formatDate\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","postAPI","setup","posts","pageInfo","fetchPosts","page","response","getList","value","data","content","currentPage","totalPages","hasNext","hasPrevious","error","console","handlePageChange","formatDate","dateString","Date","toLocaleDateString"],"sources":["/Users/user/Developer/boardpj/boardpjcli/src/components/PostList.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-4\">\n    <div class=\"d-flex justify-content-between align-items-center mb-4\">\n      <h2>게시글 목록</h2>\n      <router-link to=\"/create\" class=\"btn btn-primary\">게시글 작성</router-link>\n    </div>\n\n    <div class=\"list-group\">\n      <router-link\n          v-for=\"post in posts\"\n          :key=\"post.id\"\n          :to=\"'/posts/' + post.id\"\n          class=\"list-group-item list-group-item-action\"\n      >\n        <div class=\"d-flex w-100 justify-content-between\">\n          <h5 class=\"mb-1\">{{ post.title }}</h5>\n          <small>{{ formatDate(post.createdAt) }}</small>\n        </div>\n        <p class=\"mb-1\">{{ post.author }}</p>\n        <small>조회수: {{ post.viewCount }}</small>\n      </router-link>\n    </div>\n  </div>\n\n  <!-- 페이지네이션 추가 -->\n  <nav v-if=\"pageInfo\" aria-label=\"Page navigation\" class=\"d-flex justify-content-center\">\n    <ul class=\"pagination\">\n      <li class=\"page-item\" :class=\"{ disabled: !pageInfo.hasPrevious }\">\n        <a\n            class=\"page-link\"\n            href=\"#\"\n            @click.prevent=\"handlePageChange(pageInfo.currentPage - 1)\"\n        >\n          이전\n        </a>\n      </li>\n      <li class=\"page-item\">\n          <span class=\"page-link\">\n            {{ pageInfo.currentPage }} / {{ pageInfo.totalPages }}\n          </span>\n      </li>\n      <li class=\"page-item\" :class=\"{ disabled: !pageInfo.hasNext }\">\n        <a\n            class=\"page-link\"\n            href=\"#\"\n            @click.prevent=\"handlePageChange(pageInfo.currentPage + 1)\"\n        >\n          다음\n        </a>\n      </li>\n    </ul>\n  </nav>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue'\nimport { postAPI } from '@/api'\n\nexport default {\n  setup() {\n    const posts = ref([])\n    const pageInfo = ref(null)\n\n    const fetchPosts = async (page = 1) => {\n      try {\n        const response = await postAPI.getList(page)\n        posts.value = response.data.content\n        pageInfo.value = {\n          currentPage: response.data.currentPage,\n          totalPages: response.data.totalPages,\n          hasNext: response.data.hasNext,\n          hasPrevious: response.data.hasPrevious\n        }\n      } catch (error) {\n        console.error('게시글 목록 조회 실패:', error)\n      }\n    }\n\n    const handlePageChange = (page) => {\n      fetchPosts(page)\n    }\n\n    const formatDate = (dateString) => {\n      return new Date(dateString).toLocaleDateString()\n    }\n\n    onMounted(() => {\n      fetchPosts()\n    })\n\n    return {\n      posts,\n      pageInfo,\n      handlePageChange,\n      formatDate\n    }\n  }\n}\n</script>\n\n<style scoped>\n.pagination {\n  margin-bottom: 0;\n}\n\n.page-link {\n  cursor: pointer;\n}\n\n.page-item.disabled .page-link {\n  cursor: not-allowed;\n}\n</style>"],"mappings":"AAuDA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAI;AACnC,SAASC,OAAM,QAAS,OAAM;AAE9B,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIJ,GAAG,CAAC,EAAE;IACpB,MAAMK,QAAO,GAAIL,GAAG,CAAC,IAAI;IAEzB,MAAMM,UAAS,GAAI,MAAAA,CAAOC,IAAG,GAAI,CAAC,KAAK;MACrC,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMN,OAAO,CAACO,OAAO,CAACF,IAAI;QAC3CH,KAAK,CAACM,KAAI,GAAIF,QAAQ,CAACG,IAAI,CAACC,OAAM;QAClCP,QAAQ,CAACK,KAAI,GAAI;UACfG,WAAW,EAAEL,QAAQ,CAACG,IAAI,CAACE,WAAW;UACtCC,UAAU,EAAEN,QAAQ,CAACG,IAAI,CAACG,UAAU;UACpCC,OAAO,EAAEP,QAAQ,CAACG,IAAI,CAACI,OAAO;UAC9BC,WAAW,EAAER,QAAQ,CAACG,IAAI,CAACK;QAC7B;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK;MACtC;IACF;IAEA,MAAME,gBAAe,GAAKZ,IAAI,IAAK;MACjCD,UAAU,CAACC,IAAI;IACjB;IAEA,MAAMa,UAAS,GAAKC,UAAU,IAAK;MACjC,OAAO,IAAIC,IAAI,CAACD,UAAU,CAAC,CAACE,kBAAkB,CAAC;IACjD;IAEAtB,SAAS,CAAC,MAAM;MACdK,UAAU,CAAC;IACb,CAAC;IAED,OAAO;MACLF,KAAK;MACLC,QAAQ;MACRc,gBAAgB;MAChBC;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}