{"ast":null,"code":"import { ref, computed } from 'vue';\nimport { useStore } from 'vuex';\nexport default {\n  name: 'UserHeader',\n  setup() {\n    const store = useStore();\n    const usernameInput = ref('');\n    const username = computed(() => store.getters.getUsername);\n    const isLoggedIn = computed(() => store.getters.isLoggedIn);\n    const handleSetUsername = () => {\n      if (usernameInput.value.trim()) {\n        store.dispatch('setUsername', usernameInput.value.trim());\n        usernameInput.value = '';\n      }\n    };\n    const handleClearUsername = () => {\n      store.dispatch('clearUsername');\n    };\n    return {\n      usernameInput,\n      username,\n      isLoggedIn,\n      handleSetUsername,\n      handleClearUsername\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","useStore","name","setup","store","usernameInput","username","getters","getUsername","isLoggedIn","handleSetUsername","value","trim","dispatch","handleClearUsername"],"sources":["/Users/user/Developer/boardpj/boardpjcli/src/components/UserHeader.vue"],"sourcesContent":["<template>\n  <div class=\"d-flex align-items-center\">\n    <!-- 사용자가 설정되지 않았을 때 -->\n    <div v-if=\"!isLoggedIn\" class=\"user-input-group d-flex align-items-center\">\n      <input\n          v-model=\"usernameInput\"\n          type=\"text\"\n          class=\"form-control form-control-sm custom-input\"\n          placeholder=\"사용자 이름 입력\"\n          @keyup.enter=\"handleSetUsername\"\n      >\n      <button class=\"btn btn-sm btn-light custom-btn ms-2\" @click=\"handleSetUsername\">\n        확인\n      </button>\n    </div>\n\n    <!-- 사용자가 설정되었을 때 -->\n    <div v-else class=\"text-light d-flex align-items-center\">\n      <span class=\"username me-3\">{{ username }}</span>\n      <button class=\"btn btn-sm btn-outline-light custom-btn\" @click=\"handleClearUsername\">\n        변경\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed } from 'vue'\nimport { useStore } from 'vuex'\n\nexport default {\n  name: 'UserHeader',\n  setup() {\n    const store = useStore()\n    const usernameInput = ref('')\n\n    const username = computed(() => store.getters.getUsername)\n    const isLoggedIn = computed(() => store.getters.isLoggedIn)\n\n    const handleSetUsername = () => {\n      if (usernameInput.value.trim()) {\n        store.dispatch('setUsername', usernameInput.value.trim())\n        usernameInput.value = ''\n      }\n    }\n\n    const handleClearUsername = () => {\n      store.dispatch('clearUsername')\n    }\n\n    return {\n      usernameInput,\n      username,\n      isLoggedIn,\n      handleSetUsername,\n      handleClearUsername\n    }\n  }\n}\n</script>"],"mappings":"AA2BA,SAASA,GAAG,EAAEC,QAAO,QAAS,KAAI;AAClC,SAASC,QAAO,QAAS,MAAK;AAE9B,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIH,QAAQ,CAAC;IACvB,MAAMI,aAAY,GAAIN,GAAG,CAAC,EAAE;IAE5B,MAAMO,QAAO,GAAIN,QAAQ,CAAC,MAAMI,KAAK,CAACG,OAAO,CAACC,WAAW;IACzD,MAAMC,UAAS,GAAIT,QAAQ,CAAC,MAAMI,KAAK,CAACG,OAAO,CAACE,UAAU;IAE1D,MAAMC,iBAAgB,GAAIA,CAAA,KAAM;MAC9B,IAAIL,aAAa,CAACM,KAAK,CAACC,IAAI,CAAC,CAAC,EAAE;QAC9BR,KAAK,CAACS,QAAQ,CAAC,aAAa,EAAER,aAAa,CAACM,KAAK,CAACC,IAAI,CAAC,CAAC;QACxDP,aAAa,CAACM,KAAI,GAAI,EAAC;MACzB;IACF;IAEA,MAAMG,mBAAkB,GAAIA,CAAA,KAAM;MAChCV,KAAK,CAACS,QAAQ,CAAC,eAAe;IAChC;IAEA,OAAO;MACLR,aAAa;MACbC,QAAQ;MACRG,UAAU;MACVC,iBAAiB;MACjBI;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}