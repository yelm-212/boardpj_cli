{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { postAPI } from '@/api';\nexport default {\n  setup() {\n    const router = useRouter();\n    const posts = ref([]);\n    const pageInfo = ref(null);\n    const fetchPosts = async (page = 1) => {\n      try {\n        const response = await postAPI.getList(page);\n        posts.value = response.data.content;\n        pageInfo.value = {\n          currentPage: response.data.currentPage,\n          totalPages: response.data.totalPages,\n          hasNext: response.data.hasNext,\n          hasPrevious: response.data.hasPrevious\n        };\n      } catch (error) {\n        console.error('게시글 목록 조회 실패:', error);\n      }\n    };\n    const goToDetail = id => {\n      router.push(`/posts/${id}`);\n    };\n    const changePage = page => {\n      fetchPosts(page);\n    };\n    const formatDate = dateString => {\n      return new Date(dateString).toLocaleDateString();\n    };\n    onMounted(() => {\n      fetchPosts();\n    });\n    return {\n      posts,\n      pageInfo,\n      goToDetail,\n      changePage,\n      formatDate\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRouter","postAPI","setup","router","posts","pageInfo","fetchPosts","page","response","getList","value","data","content","currentPage","totalPages","hasNext","hasPrevious","error","console","goToDetail","id","push","changePage","formatDate","dateString","Date","toLocaleDateString"],"sources":["/Users/user/Developer/boardpj/boardpjcli/src/components/PostList.vue"],"sourcesContent":["<template>\n<div class=\"container mt-4\">\n<div class=\"d-flex justify-content-between mb-4\">\n  <h2>게시글 목록</h2>\n  <router-link to=\"/create\" class=\"btn btn-primary\">글작성</router-link>\n</div>\n\n<div class=\"table-responsive\">\n  <table class=\"table table-hover\">\n    <thead>\n    <tr>\n      <th>번호</th>\n      <th>제목</th>\n      <th>작성자</th>\n      <th>조회수</th>\n      <th>작성일</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr v-for=\"post in posts\" :key=\"post.id\" @click=\"goToDetail(post.id)\" style=\"cursor: pointer\">\n      <td>{{ post.id }}</td>\n      <td>{{ post.title }}</td>\n      <td>{{ post.author }}</td>\n      <td>{{ post.viewCount }}</td>\n      <td>{{ formatDate(post.createdAt) }}</td>\n    </tr>\n    </tbody>\n  </table>\n</div>\n\n<!-- 페이지네이션 -->\n<nav v-if=\"pageInfo\">\n  <ul class=\"pagination justify-content-center\">\n    <li class=\"page-item\" :class=\"{ disabled: !pageInfo.hasPrevious }\">\n      <a class=\"page-link\" href=\"#\" @click.prevent=\"changePage(pageInfo.currentPage - 1)\">이전</a>\n    </li>\n    <li class=\"page-item disabled\">\n      <span class=\"page-link\">{{ pageInfo.currentPage }} / {{ pageInfo.totalPages }}</span>\n    </li>\n    <li class=\"page-item\" :class=\"{ disabled: !pageInfo.hasNext }\">\n      <a class=\"page-link\" href=\"#\" @click.prevent=\"changePage(pageInfo.currentPage + 1)\">다음</a>\n    </li>\n  </ul>\n</nav>\n</div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { postAPI } from '@/api'\n\nexport default {\n  setup() {\n    const router = useRouter()\n    const posts = ref([])\n    const pageInfo = ref(null)\n\n    const fetchPosts = async (page = 1) => {\n      try {\n        const response = await postAPI.getList(page)\n        posts.value = response.data.content\n        pageInfo.value = {\n          currentPage: response.data.currentPage,\n          totalPages: response.data.totalPages,\n          hasNext: response.data.hasNext,\n          hasPrevious: response.data.hasPrevious\n        }\n      } catch (error) {\n        console.error('게시글 목록 조회 실패:', error)\n      }\n    }\n\n    const goToDetail = (id) => {\n      router.push(`/posts/${id}`)\n    }\n\n    const changePage = (page) => {\n      fetchPosts(page)\n    }\n\n    const formatDate = (dateString) => {\n      return new Date(dateString).toLocaleDateString()\n    }\n\n    onMounted(() => {\n      fetchPosts()\n    })\n\n    return {\n      posts,\n      pageInfo,\n      goToDetail,\n      changePage,\n      formatDate\n    }\n  }\n}\n</script>"],"mappings":";AAgDA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAI;AACnC,SAASC,SAAQ,QAAS,YAAW;AACrC,SAASC,OAAM,QAAS,OAAM;AAE9B,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIH,SAAS,CAAC;IACzB,MAAMI,KAAI,GAAIN,GAAG,CAAC,EAAE;IACpB,MAAMO,QAAO,GAAIP,GAAG,CAAC,IAAI;IAEzB,MAAMQ,UAAS,GAAI,MAAAA,CAAOC,IAAG,GAAI,CAAC,KAAK;MACrC,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMP,OAAO,CAACQ,OAAO,CAACF,IAAI;QAC3CH,KAAK,CAACM,KAAI,GAAIF,QAAQ,CAACG,IAAI,CAACC,OAAM;QAClCP,QAAQ,CAACK,KAAI,GAAI;UACfG,WAAW,EAAEL,QAAQ,CAACG,IAAI,CAACE,WAAW;UACtCC,UAAU,EAAEN,QAAQ,CAACG,IAAI,CAACG,UAAU;UACpCC,OAAO,EAAEP,QAAQ,CAACG,IAAI,CAACI,OAAO;UAC9BC,WAAW,EAAER,QAAQ,CAACG,IAAI,CAACK;QAC7B;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK;MACtC;IACF;IAEA,MAAME,UAAS,GAAKC,EAAE,IAAK;MACzBjB,MAAM,CAACkB,IAAI,CAAC,UAAUD,EAAE,EAAE;IAC5B;IAEA,MAAME,UAAS,GAAKf,IAAI,IAAK;MAC3BD,UAAU,CAACC,IAAI;IACjB;IAEA,MAAMgB,UAAS,GAAKC,UAAU,IAAK;MACjC,OAAO,IAAIC,IAAI,CAACD,UAAU,CAAC,CAACE,kBAAkB,CAAC;IACjD;IAEA3B,SAAS,CAAC,MAAM;MACdO,UAAU,CAAC;IACb,CAAC;IAED,OAAO;MACLF,KAAK;MACLC,QAAQ;MACRc,UAAU;MACVG,UAAU;MACVC;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}