{"ast":null,"code":"export default {\n  name: 'App',\n  setup() {\n    const store = useStore();\n    const usernameInput = ref('');\n    const username = computed(() => store.getters.getUsername);\n    const isLoggedIn = computed(() => store.getters.isLoggedIn);\n    const handleSetUsername = () => {\n      if (usernameInput.value.trim()) {\n        store.dispatch('setUsername', usernameInput.value.trim());\n        usernameInput.value = '';\n      }\n    };\n    const handleClearUsername = () => {\n      store.dispatch('clearUsername');\n    };\n    return {\n      usernameInput,\n      username,\n      isLoggedIn,\n      handleSetUsername,\n      handleClearUsername\n    };\n  }\n};","map":{"version":3,"names":["name","setup","store","useStore","usernameInput","ref","username","computed","getters","getUsername","isLoggedIn","handleSetUsername","value","trim","dispatch","handleClearUsername"],"sources":["/Users/user/Developer/boardpj/boardpjcli/src/App.vue"],"sourcesContent":["<template>\n  <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <div class=\"container\">\n      <router-link class=\"navbar-brand\" to=\"/\">게시판</router-link>\n    </div>\n  </nav>\n\n  <!-- 사용자가 설정되지 않았을 때 -->\n  <div v-if=\"!isLoggedIn\" class=\"d-flex\">\n    <input\n        v-model=\"usernameInput\"\n        type=\"text\"\n        class=\"form-control form-control-sm me-2\"\n        placeholder=\"사용자 이름 입력\"\n        @keyup.enter=\"handleSetUsername\"\n    >\n    <button class=\"btn btn-sm btn-light\" @click=\"handleSetUsername\">확인</button>\n  </div>\n\n  <!-- 사용자가 설정되었을 때 -->\n  <div v-else class=\"text-light d-flex align-items-center\">\n    <span class=\"me-2\">{{ username }}</span>\n    <button class=\"btn btn-sm btn-outline-light\" @click=\"handleClearUsername\">변경</button>\n  </div>\n\n  <div class=\"container mt-4\">\n    <router-view />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  setup() {\n    const store = useStore()\n    const usernameInput = ref('')\n\n    const username = computed(() => store.getters.getUsername)\n    const isLoggedIn = computed(() => store.getters.isLoggedIn)\n\n    const handleSetUsername = () => {\n      if (usernameInput.value.trim()) {\n        store.dispatch('setUsername', usernameInput.value.trim())\n        usernameInput.value = ''\n      }\n    }\n\n    const handleClearUsername = () => {\n      store.dispatch('clearUsername')\n    }\n\n    return {\n      usernameInput,\n      username,\n      isLoggedIn,\n      handleSetUsername,\n      handleClearUsername\n    }\n  }\n}\n</script>"],"mappings":"AA+BA,eAAe;EACbA,IAAI,EAAE,KAAK;EACXC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIC,QAAQ,CAAC;IACvB,MAAMC,aAAY,GAAIC,GAAG,CAAC,EAAE;IAE5B,MAAMC,QAAO,GAAIC,QAAQ,CAAC,MAAML,KAAK,CAACM,OAAO,CAACC,WAAW;IACzD,MAAMC,UAAS,GAAIH,QAAQ,CAAC,MAAML,KAAK,CAACM,OAAO,CAACE,UAAU;IAE1D,MAAMC,iBAAgB,GAAIA,CAAA,KAAM;MAC9B,IAAIP,aAAa,CAACQ,KAAK,CAACC,IAAI,CAAC,CAAC,EAAE;QAC9BX,KAAK,CAACY,QAAQ,CAAC,aAAa,EAAEV,aAAa,CAACQ,KAAK,CAACC,IAAI,CAAC,CAAC;QACxDT,aAAa,CAACQ,KAAI,GAAI,EAAC;MACzB;IACF;IAEA,MAAMG,mBAAkB,GAAIA,CAAA,KAAM;MAChCb,KAAK,CAACY,QAAQ,CAAC,eAAe;IAChC;IAEA,OAAO;MACLV,aAAa;MACbE,QAAQ;MACRI,UAAU;MACVC,iBAAiB;MACjBI;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}