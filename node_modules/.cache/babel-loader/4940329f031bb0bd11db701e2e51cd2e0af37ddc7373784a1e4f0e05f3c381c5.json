{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, computed } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nimport { postAPI } from '@/api';\nexport default {\n  props: {\n    id: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props) {\n    const router = useRouter();\n    const post = ref(null);\n    const form = ref({\n      id: '',\n      // id 필드 추가\n      title: '',\n      content: ''\n    });\n    const username = computed(() => store.getters.getUsername);\n    const fetchPost = async () => {\n      try {\n        const response = await postAPI.getPost(props.id);\n        post.value = response.data;\n\n        // 컴포넌트 레벨에서도 한번 더 체크\n        if (username.value !== post.value.author) {\n          alert('자신의 게시글만 수정할 수 있습니다.');\n          router.push('/');\n          return;\n        }\n        form.value = {\n          id: props.id,\n          title: response.data.title,\n          content: response.data.content\n        };\n      } catch (error) {\n        console.error('게시글 조회 실패:', error);\n        router.push('/');\n      }\n    };\n    const handleSubmit = async () => {\n      try {\n        console.log(form.value);\n        await postAPI.updatePost(form.value);\n        router.push(`/posts/${props.id}`);\n      } catch (error) {\n        console.error('게시글 수정 실패:', error);\n        if (error.response) {\n          console.log('Error Data:', error.response.data);\n          console.log('Error Status:', error.response.status);\n          console.log('Error Headers:', error.response.headers);\n        }\n      }\n    };\n    onMounted(() => {\n      fetchPost();\n    });\n    return {\n      post,\n      form,\n      handleSubmit\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","useStore","useRouter","postAPI","props","id","type","String","required","setup","router","post","form","title","content","username","store","getters","getUsername","fetchPost","response","getPost","value","data","author","alert","push","error","console","handleSubmit","log","updatePost","status","headers"],"sources":["/Users/user/Developer/boardpj/boardpjcli/src/components/PostEdit.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-4\">\n    <div class=\"d-flex justify-content-between align-items-center mb-4\">\n      <h2>게시글 수정</h2>\n    </div>\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <form @submit.prevent=\"handleSubmit\" v-if=\"post\">\n          <div class=\"mb-3\">\n            <label class=\"form-label\">제목</label>\n            <input v-model=\"form.title\" type=\"text\" class=\"form-control\" required>\n          </div>\n          <div class=\"mb-3\">\n            <label class=\"form-label\">내용</label>\n            <textarea v-model=\"form.content\" class=\"form-control\" rows=\"5\" required></textarea>\n          </div>\n          <div class=\"d-flex justify-content-between\">\n            <router-link :to=\"'/posts/' + id\" class=\"btn btn-secondary\">취소</router-link>\n            <button type=\"submit\" class=\"btn btn-primary\">수정</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {ref, onMounted, computed} from 'vue'\nimport { useStore } from 'vuex'\nimport { useRouter } from 'vue-router'\nimport { postAPI } from '@/api'\n\nexport default {\n  props: {\n    id: {\n      type: String,\n      required: true\n    }\n  },\n\n\n  setup(props) {\n    const router = useRouter()\n    const post = ref(null)\n    const form = ref({\n      id: '',  // id 필드 추가\n      title: '',\n      content: ''\n    })\n\n    const username = computed(() => store.getters.getUsername)\n\n    const fetchPost = async () => {\n      try {\n        const response = await postAPI.getPost(props.id)\n        post.value = response.data\n\n        // 컴포넌트 레벨에서도 한번 더 체크\n        if (username.value !== post.value.author) {\n          alert('자신의 게시글만 수정할 수 있습니다.')\n          router.push('/')\n          return\n        }\n\n        form.value = {\n          id: props.id,\n          title: response.data.title,\n          content: response.data.content\n        }\n      } catch (error) {\n        console.error('게시글 조회 실패:', error)\n        router.push('/')\n      }\n    }\n\n    const handleSubmit = async () => {\n      try {\n        console.log(form.value)\n        await postAPI.updatePost(form.value)\n        router.push(`/posts/${props.id}`)\n      } catch (error) {\n        console.error('게시글 수정 실패:', error)\n        if (error.response) {\n          console.log('Error Data:', error.response.data)\n          console.log('Error Status:', error.response.status)\n          console.log('Error Headers:', error.response.headers)\n        }\n      }\n    }\n\n    onMounted(() => {\n      fetchPost()\n    })\n\n    return {\n      post,\n      form,\n      handleSubmit\n    }\n  }\n}\n</script>"],"mappings":";AA2BA,SAAQA,GAAG,EAAEC,SAAS,EAAEC,QAAQ,QAAO,KAAI;AAC3C,SAASC,QAAO,QAAS,MAAK;AAC9B,SAASC,SAAQ,QAAS,YAAW;AACrC,SAASC,OAAM,QAAS,OAAM;AAE9B,eAAe;EACbC,KAAK,EAAE;IACLC,EAAE,EAAE;MACFC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EAGDC,KAAKA,CAACL,KAAK,EAAE;IACX,MAAMM,MAAK,GAAIR,SAAS,CAAC;IACzB,MAAMS,IAAG,GAAIb,GAAG,CAAC,IAAI;IACrB,MAAMc,IAAG,GAAId,GAAG,CAAC;MACfO,EAAE,EAAE,EAAE;MAAG;MACTQ,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX,CAAC;IAED,MAAMC,QAAO,GAAIf,QAAQ,CAAC,MAAMgB,KAAK,CAACC,OAAO,CAACC,WAAW;IAEzD,MAAMC,SAAQ,GAAI,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMjB,OAAO,CAACkB,OAAO,CAACjB,KAAK,CAACC,EAAE;QAC/CM,IAAI,CAACW,KAAI,GAAIF,QAAQ,CAACG,IAAG;;QAEzB;QACA,IAAIR,QAAQ,CAACO,KAAI,KAAMX,IAAI,CAACW,KAAK,CAACE,MAAM,EAAE;UACxCC,KAAK,CAAC,sBAAsB;UAC5Bf,MAAM,CAACgB,IAAI,CAAC,GAAG;UACf;QACF;QAEAd,IAAI,CAACU,KAAI,GAAI;UACXjB,EAAE,EAAED,KAAK,CAACC,EAAE;UACZQ,KAAK,EAAEO,QAAQ,CAACG,IAAI,CAACV,KAAK;UAC1BC,OAAO,EAAEM,QAAQ,CAACG,IAAI,CAACT;QACzB;MACF,EAAE,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK;QACjCjB,MAAM,CAACgB,IAAI,CAAC,GAAG;MACjB;IACF;IAEA,MAAMG,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACFD,OAAO,CAACE,GAAG,CAAClB,IAAI,CAACU,KAAK;QACtB,MAAMnB,OAAO,CAAC4B,UAAU,CAACnB,IAAI,CAACU,KAAK;QACnCZ,MAAM,CAACgB,IAAI,CAAC,UAAUtB,KAAK,CAACC,EAAE,EAAE;MAClC,EAAE,OAAOsB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK;QACjC,IAAIA,KAAK,CAACP,QAAQ,EAAE;UAClBQ,OAAO,CAACE,GAAG,CAAC,aAAa,EAAEH,KAAK,CAACP,QAAQ,CAACG,IAAI;UAC9CK,OAAO,CAACE,GAAG,CAAC,eAAe,EAAEH,KAAK,CAACP,QAAQ,CAACY,MAAM;UAClDJ,OAAO,CAACE,GAAG,CAAC,gBAAgB,EAAEH,KAAK,CAACP,QAAQ,CAACa,OAAO;QACtD;MACF;IACF;IAEAlC,SAAS,CAAC,MAAM;MACdoB,SAAS,CAAC;IACZ,CAAC;IAED,OAAO;MACLR,IAAI;MACJC,IAAI;MACJiB;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}