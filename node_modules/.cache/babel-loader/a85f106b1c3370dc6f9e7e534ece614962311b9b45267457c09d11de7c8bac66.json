{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { postAPI } from '@/api';\nimport PostForm from './PostForm.vue';\nexport default {\n  components: {\n    PostForm\n  },\n  props: {\n    id: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props) {\n    const router = useRouter();\n    const post = ref(null);\n    const fetchPost = async () => {\n      try {\n        const response = await postAPI.getPost(props.id);\n        post.value = response.data;\n      } catch (error) {\n        console.error('게시글 조회 실패:', error);\n      }\n    };\n    const updatePost = async formData => {\n      try {\n        await postAPI.updatePost(props.id, formData);\n        router.push(`/posts/${props.id}`);\n      } catch (error) {\n        console.error('게시글 수정 실패:', error);\n      }\n    };\n    onMounted(() => {\n      fetchPost();\n    });\n    return {\n      post,\n      updatePost\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRouter","postAPI","PostForm","components","props","id","type","String","required","setup","router","post","fetchPost","response","getPost","value","data","error","console","updatePost","formData","push"],"sources":["/Users/user/Developer/boardpj/boardpjcli/src/components/PostEdit.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-4\">\n    <h2>게시글 수정</h2>\n    <post-form\n        v-if=\"post\"\n        :initial-data=\"post\"\n        :is-edit=\"true\"\n        :submit-button-text=\"'수정'\"\n        @submit=\"updatePost\"\n    />\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { postAPI } from '@/api'\nimport PostForm from './PostForm.vue'\n\nexport default {\n  components: {\n    PostForm\n  },\n\n  props: {\n    id: {\n      type: String,\n      required: true\n    }\n  },\n\n  setup(props) {\n    const router = useRouter()\n    const post = ref(null)\n\n    const fetchPost = async () => {\n      try {\n        const response = await postAPI.getPost(props.id)\n        post.value = response.data\n      } catch (error) {\n        console.error('게시글 조회 실패:', error)\n      }\n    }\n\n    const updatePost = async (formData) => {\n      try {\n        await postAPI.updatePost(props.id, formData)\n        router.push(`/posts/${props.id}`)\n      } catch (error) {\n        console.error('게시글 수정 실패:', error)\n      }\n    }\n\n    onMounted(() => {\n      fetchPost()\n    })\n\n    return {\n      post,\n      updatePost\n    }\n  }\n}\n</script>"],"mappings":";AAcA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAI;AACnC,SAASC,SAAQ,QAAS,YAAW;AACrC,SAASC,OAAM,QAAS,OAAM;AAC9B,OAAOC,QAAO,MAAO,gBAAe;AAEpC,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EAEDE,KAAK,EAAE;IACLC,EAAE,EAAE;MACFC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EAEDC,KAAKA,CAACL,KAAK,EAAE;IACX,MAAMM,MAAK,GAAIV,SAAS,CAAC;IACzB,MAAMW,IAAG,GAAIb,GAAG,CAAC,IAAI;IAErB,MAAMc,SAAQ,GAAI,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMZ,OAAO,CAACa,OAAO,CAACV,KAAK,CAACC,EAAE;QAC/CM,IAAI,CAACI,KAAI,GAAIF,QAAQ,CAACG,IAAG;MAC3B,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK;MACnC;IACF;IAEA,MAAME,UAAS,GAAI,MAAOC,QAAQ,IAAK;MACrC,IAAI;QACF,MAAMnB,OAAO,CAACkB,UAAU,CAACf,KAAK,CAACC,EAAE,EAAEe,QAAQ;QAC3CV,MAAM,CAACW,IAAI,CAAC,UAAUjB,KAAK,CAACC,EAAE,EAAE;MAClC,EAAE,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK;MACnC;IACF;IAEAlB,SAAS,CAAC,MAAM;MACda,SAAS,CAAC;IACZ,CAAC;IAED,OAAO;MACLD,IAAI;MACJQ;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}